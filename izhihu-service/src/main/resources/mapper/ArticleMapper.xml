<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.xmut.izhihu.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="cn.edu.xmut.izhihu.pojo.entity.Article">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="article_id" jdbcType="VARCHAR" property="articleId"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="ques_id" jdbcType="VARCHAR" property="quesId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="photo_url" jdbcType="VARCHAR" property="photoUrl"/>
        <result column="author_id" jdbcType="VARCHAR" property="authorId"/>
        <result column="anonymity" jdbcType="INTEGER" property="anonymity"/>
        <result column="comment_num" jdbcType="INTEGER" property="commentNum"/>
        <result column="report_num" jdbcType="INTEGER" property="reportNum"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="del" jdbcType="INTEGER" property="del"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <select id="getArticleRandom" resultType="java.util.HashMap">
        SELECT
        users.`name`,
        article.article_id,
        article.type,
        article.ques_id,
        article.title,
        article.photo_url,
        article.content,
        article.author_id,
        article.anonymity,
        article.comment_num,
        article.report_num,
        article.create_time,
        article.update_time
        FROM
        article
        JOIN users
        ON article.author_id = users.user_id
        WHERE
        article.del = 0
        ORDER BY RAND() LIMIT 10
    </select>


    <select id="todayHot" resultType="java.util.HashMap">
        SELECT
        COUNT(agree_oppose.article_id),
        article.article_id AS article_id_0,
        article.type,
        article.ques_id,
        article.title,
        article.photo_url,
        article.content,
        article.author_id,
        article.anonymity,
        article.comment_num,
        article.report_num,
        article.create_time,
        article.update_time
        FROM
        agree_oppose
        LEFT JOIN article
        ON agree_oppose.article_id = article.article_id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(agree_oppose.create_time)
        AND
        article.del = 0
        GROUP BY
        agree_oppose.article_id
        ORDER BY COUNT(agree_oppose.article_id) DESC
    </select>

    <select id="monthHot" resultType="java.util.HashMap">
        SELECT
        COUNT(agree_oppose.article_id),
        article.article_id AS article_id_0,
        article.type,
        article.ques_id,
        article.title,
        article.photo_url,
        article.content,
        article.author_id,
        article.anonymity,
        article.comment_num,
        article.report_num,
        article.create_time,
        article.update_time
        FROM
        agree_oppose
        LEFT JOIN article
        ON agree_oppose.article_id = article.article_id
        WHERE
        DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(agree_oppose.create_time)
        AND
        article.del = 0
        GROUP BY
        agree_oppose.article_id
        ORDER BY COUNT(agree_oppose.article_id) DESC

    </select>

    <select id="getArticleByUser" resultType="java.util.HashMap">
        SELECT
users.`name`,
article.article_id,
article.type,
article.ques_id,
article.title,
article.photo_url,
article.content,
article.author_id,
article.anonymity,
article.comment_num,
article.report_num,
article.create_time,
article.update_time
FROM
article
JOIN users
ON article.author_id = users.user_id
WHERE
izhihu.article.del = 0
and
izhihu.article.author_id = #{userId}
and
izhihu.article.type = #{type}
    </select>

</mapper>